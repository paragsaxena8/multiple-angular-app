{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/view2/view2.component.html","webpack:///src/app/view2/view2.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","AppRoutingModule","AppComponent2","title","AppModule","App2SharedModule","ngModule","providers","NavComponent","View2Component","environment","production","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { View2Component } from './view2/view2.component';\n\n\nconst routes: Routes = [\n  { path: 'app2/one', component: View2Component },\n  { path: 'app2', redirectTo: 'app2/one' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-nav></app-nav>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent2 {\n  title = 'app2';\n}\n","import { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent2 } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { View2Component } from './view2/view2.component';\n\n@NgModule({\n  declarations: [\n    AppComponent2,\n    NavComponent,\n    View2Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent2]\n})\nexport class AppModule { }\n@NgModule({})\nexport class App2SharedModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: AppModule,\n      providers: []\n    }\n  }\n}\n","\n<a routerLink=\"/app1/two\">Two</a>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p><ngb-progressbar type=\"info\" [value]=\"25\"></ngb-progressbar></p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-view2',\n  templateUrl: './view2.component.html',\n  styleUrls: ['./view2.component.css']\n})\nexport class View2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}